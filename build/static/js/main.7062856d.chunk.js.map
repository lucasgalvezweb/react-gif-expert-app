{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","downsized_medium","console","warn","GifGridItem","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categories","index","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC3CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOL,GAAP,uBAAAM,EAAA,sEAETC,EAFS,gDAEuCC,UAAUR,GAFjD,8DAGIS,MAAMF,GAHV,cAGTG,EAHS,gBAIMA,EAAKC,OAJX,uBAIRC,EAJQ,EAIRA,KAEDC,EAAOD,EAAKE,KAAK,YAA0B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,OAChC,MAAO,CACHF,GAAIA,EACJC,MAAOA,EACPT,IAAG,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBX,QAVvB,kBAcRM,GAdQ,kCAgBfM,QAAQC,KAAR,MAhBe,0DAAH,sDCEPC,EAAc,SAAC,GAAsB,IAArBN,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAIpC,OAFAY,QAAQG,IAAIP,EAAIC,EAAOT,GAGnB,sBAAKgB,UAAU,6DAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKT,IACpB,4BAAIA,QCLHU,EAAU,SAAC,GAAgB,IAAf1B,EAAc,EAAdA,SAErB,ECHwB,SAACA,GAEzB,MAA0BR,mBAAS,CAC/BoB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACNzB,EAAQL,GAAU+B,MAAM,SAAAC,GACpBH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGlB,CAAC3B,IAEG4B,EDb0BK,CAAajC,GAAjCiB,EAAb,EAAQL,KAAae,EAArB,EAAqBA,QAKrB,OAHAR,QAAQG,IAAIL,GAIR,qCACM,oBAAIM,UAAU,oCAAd,SAAmDvB,IAEnD2B,GAAW,mBAAGJ,UAAU,oCAAb,yBAEb,qBAAKA,UAAU,YAAf,SAEQN,EAAOH,KAAK,SAAAoB,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAInB,aEfhDoB,EAAe,WAExB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,gCACI,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BAEQ6C,EAAWtB,KAAK,SAACd,EAAUqC,GAAX,OAAqB,cAAC,EAAD,CAAwBrC,SAAUA,GAApBA,Y,MCbvEsC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7062856d.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('') // Si lo dejo sin estado inicial el valor del input es undefined\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( category => [inputValue, ...category])            \r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n    try {\r\n        const url = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=5&api_key=1DtRVCRUoYfXUjrcnn0oUf3PdRW092Yv`\r\n        const resp = await fetch(url)\r\n        const {data} = await resp.json()\r\n\r\n        const gifs = data.map( ({id, title, images}) => {\r\n            return {\r\n                id: id,\r\n                title: title,\r\n                url: images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        return gifs // Retorna una promesa que puede o no ser cumplida\r\n    } catch (error) {\r\n        console.warn(error)\r\n    }\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    console.log(id, title, url)\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__delay-0.5s\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category)\r\n\r\n    console.log(images)\r\n    \r\n\r\n    return (\r\n        <>\r\n            { <h3 className=\"animate__animated animate__fadeIn\">{category}</h3> }\r\n\r\n            { loading && <p className=\"animate__animated animate__fadeIn\">Cargando...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => <GifGridItem key={img.id} {...img} /> )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then( imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        })\r\n    }, [category])\r\n\r\n    return state // { data: [], loading: true }\r\n\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCategories={setCategories}/>\r\n\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (category, index) => <GifGrid key={category} category={category}/> )\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}